create table
  public.barrel_purchase_history (
    id bigint generated by default as identity,
    created_at timestamp with time zone not null default now(),
    sku text not null,
    quantity bigint not null,
    red smallint not null,
    green smallint not null,
    blue smallint not null,
    dark smallint not null,
    ml_per_barrel bigint not null,
    price bigint not null,
    constraint barrel_purchase_history_pkey primary key (id)
  ) tablespace pg_default;

create table
  public.bottling_history (
    id bigint generated by default as identity,
    created_at timestamp with time zone not null default now(),
    potion_id bigint not null,
    quantity bigint not null,
    constraint bottling_history_pkey primary key (id),
    constraint bottling_history_potion_id_fkey foreign key (potion_id) references potion_inventory (id) on update cascade on delete restrict
  ) tablespace pg_default;

create table
  public.cart_checkouts (
    id bigint generated by default as identity,
    created_at timestamp with time zone not null default now(),
    cart_id bigint not null,
    payment text not null,
    constraint cart_checkouts_pkey primary key (id),
    constraint cart_checkouts_cart_id_fkey foreign key (cart_id) references carts (id) on update cascade on delete restrict
  ) tablespace pg_default;

create table
  public.cart_contents (
    id bigint generated by default as identity,
    cart_id bigint not null,
    potion_id bigint not null,
    quantity integer not null default 0,
    created_at timestamp with time zone not null default now(),
    price bigint null,
    constraint cart_transactions_pkey primary key (id),
    constraint cart_contents_cart_id_fkey foreign key (cart_id) references carts (id) on update restrict on delete cascade,
    constraint cart_contents_potion_id_fkey foreign key (potion_id) references potion_inventory (id) on update restrict on delete restrict
  ) tablespace pg_default;

create table
  public.carts (
    id bigint generated by default as identity,
    customer_name text null default ''::text,
    created_at timestamp with time zone not null default now(),
    constraint carts_pkey primary key (id)
  ) tablespace pg_default;

create table
  public.inventory_ledger (
    id bigint generated by default as identity,
    timestamp timestamp with time zone not null default now(),
    red_ml bigint not null default '0'::bigint,
    green_ml bigint not null default '0'::bigint,
    blue_ml bigint not null default '0'::bigint,
    dark_ml bigint not null default '0'::bigint,
    gold bigint not null default '0'::bigint,
    description text not null,
    constraint inventory_ledger_pkey primary key (id)
  ) tablespace pg_default;

create table
  public.potion_catalog_history (
    id bigint generated by default as identity,
    created_at timestamp with time zone not null default now(),
    potion_id bigint not null,
    price bigint not null,
    quantity bigint not null,
    constraint potion_catalog_history_pkey primary key (id),
    constraint potion_catalog_history_potion_id_fkey foreign key (potion_id) references potion_inventory (id) on update cascade on delete restrict
  ) tablespace pg_default;

create table
  public.potion_inventory (
    id bigint generated by default as identity,
    red smallint not null default '0'::smallint,
    green smallint not null default '0'::smallint,
    blue smallint not null default '0'::smallint,
    dark smallint not null default '0'::smallint,
    sku text not null,
    price integer not null,
    desired_qty bigint not null,
    constraint potion_inventory_pkey primary key (id),
    constraint potion_inventory_sku_key unique (sku),
    constraint potiontypesumsto100 check (((((red + green) + blue) + dark) = 100))
  ) tablespace pg_default;

create table
  public.potion_ledger (
    id bigint generated by default as identity,
    timestamp timestamp with time zone not null default now(),
    qty_change bigint not null,
    potion_id bigint not null,
    description text not null,
    constraint potion_ledger_pkey primary key (id),
    constraint potion_ledger_potion_id_fkey foreign key (potion_id) references potion_inventory (id) on update cascade on delete restrict
  ) tablespace pg_default;

create table
  public.wholesale_catalog_history (
    id bigint generated by default as identity,
    created_at timestamp with time zone not null default now(),
    sku text not null,
    ml_per_barrel bigint not null,
    red smallint not null,
    green smallint not null,
    blue smallint not null,
    dark smallint not null,
    price bigint not null,
    quantity bigint not null,
    constraint wholesale_catalog_history_pkey primary key (id)
  ) tablespace pg_default;